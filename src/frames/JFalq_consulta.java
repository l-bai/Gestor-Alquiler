/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import DAO.*;
import gestionBBDD.ConectaBBDD;
import gestionBBDD.LibreriaUsoBBDD;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Lidia Baixauli de la Villa
 */
public class JFalq_consulta extends javax.swing.JFrame {

    /**
     * Creates new form jFnewVeh
     */
    private Alquiler alq;
    private ConectaBBDD con = new ConectaBBDD();
    private ConectaBBDD conBusqueda = new ConectaBBDD();
    private String matAct;

    public JFalq_consulta() {

        initComponents();
        setLocationRelativeTo(null);

        //ponemos el número de alquileress totales
        int numAlq;
        try {
            con.conecta();
            con.crearSentencia();
            con.cargaTabla("Alquiler");
            numAlq = con.tamanyo();
            con.cerrarConexion();
            jLtotalAlq.setText(Integer.toString(numAlq));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error Conexión!!", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error!!", JOptionPane.ERROR_MESSAGE);
        }
        
        //botonera deshabilitada
        //se habilita si un conductor tiene más de un alquiler
        jBanterior.setEnabled(false);
        jBnext.setEnabled(false);
        jBfirst.setEnabled(false);
        jBlast.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPdatosAlq = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_datosAlq_ = new javax.swing.JTextArea();
        jPintroMat = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jFTmat = new javax.swing.JFormattedTextField();
        jLerrorMatri = new javax.swing.JLabel();
        jBcheckMat_ = new javax.swing.JButton();
        jPbusca_DNI = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLerrorDni = new javax.swing.JLabel();
        jFTdni = new javax.swing.JFormattedTextField();
        jBcheckDni_ = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLtotalAlq = new javax.swing.JLabel();
        jPbotonera = new javax.swing.JPanel();
        jBcancel = new javax.swing.JButton();
        jBfirst = new javax.swing.JButton();
        jBanterior = new javax.swing.JButton();
        jBnext = new javax.swing.JButton();
        jBlast = new javax.swing.JButton();
        jLalq_actual = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consultar alquiler");
        setBackground(new java.awt.Color(255, 51, 51));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 134, 209));
        jPanel1.setPreferredSize(new java.awt.Dimension(650, 300));

        jPdatosAlq.setBackground(new java.awt.Color(255, 255, 255));

        jTextArea_datosAlq_.setEditable(false);
        jTextArea_datosAlq_.setColumns(20);
        jTextArea_datosAlq_.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextArea_datosAlq_.setForeground(new java.awt.Color(0, 51, 153));
        jTextArea_datosAlq_.setRows(5);
        jScrollPane1.setViewportView(jTextArea_datosAlq_);

        javax.swing.GroupLayout jPdatosAlqLayout = new javax.swing.GroupLayout(jPdatosAlq);
        jPdatosAlq.setLayout(jPdatosAlqLayout);
        jPdatosAlqLayout.setHorizontalGroup(
            jPdatosAlqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPdatosAlqLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPdatosAlqLayout.setVerticalGroup(
            jPdatosAlqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPdatosAlqLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPintroMat.setBackground(new java.awt.Color(153, 204, 255));

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153)), "Búsqueda por matrícula", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18), new java.awt.Color(0, 0, 153))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 153));
        jLabel4.setText("Introduzca la matrícula:");

        jFTmat.setBackground(new java.awt.Color(255, 255, 255));
        jFTmat.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 0));
        jFTmat.setForeground(new java.awt.Color(0, 0, 153));
        try {
            jFTmat.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####???")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTmat.setText("");
        jFTmat.setAlignmentX(10.0F);
        jFTmat.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jFTmat.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jFTmat.setMargin(new java.awt.Insets(0, 10, 0, 0));
        jFTmat.setPreferredSize(new java.awt.Dimension(38, 22));

        jLerrorMatri.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        jLerrorMatri.setForeground(new java.awt.Color(255, 0, 51));

        jBcheckMat_.setBackground(new java.awt.Color(164, 164, 140));
        jBcheckMat_.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jBcheckMat_.setForeground(new java.awt.Color(51, 51, 0));
        jBcheckMat_.setText("Comprobar ");
        jBcheckMat_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBcheckMat_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcheckMat_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLerrorMatri, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFTmat, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBcheckMat_, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTmat, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBcheckMat_, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLerrorMatri, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPbusca_DNI.setBackground(new java.awt.Color(153, 204, 255));
        jPbusca_DNI.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153)), "Búsqueda por D.N.I.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18), new java.awt.Color(0, 0, 153))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 153));
        jLabel3.setText("Introduzca el D.N.I. :");

        jLerrorDni.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        jLerrorDni.setForeground(new java.awt.Color(255, 0, 51));

        jFTdni.setBackground(new java.awt.Color(255, 255, 255));
        jFTdni.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 0));
        jFTdni.setForeground(new java.awt.Color(0, 0, 153));
        try {
            jFTdni.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("########-?")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTdni.setAlignmentX(10.0F);
        jFTdni.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jFTdni.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jFTdni.setMargin(new java.awt.Insets(0, 10, 0, 0));
        jFTdni.setPreferredSize(new java.awt.Dimension(38, 22));

        jBcheckDni_.setBackground(new java.awt.Color(164, 164, 140));
        jBcheckDni_.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jBcheckDni_.setForeground(new java.awt.Color(51, 51, 0));
        jBcheckDni_.setText("Comprobar ");
        jBcheckDni_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBcheckDni_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcheckDni_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPbusca_DNILayout = new javax.swing.GroupLayout(jPbusca_DNI);
        jPbusca_DNI.setLayout(jPbusca_DNILayout);
        jPbusca_DNILayout.setHorizontalGroup(
            jPbusca_DNILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPbusca_DNILayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPbusca_DNILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLerrorDni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPbusca_DNILayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFTdni, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(127, 127, 127)
                .addComponent(jBcheckDni_, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPbusca_DNILayout.setVerticalGroup(
            jPbusca_DNILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPbusca_DNILayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPbusca_DNILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTdni, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBcheckDni_, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLerrorDni, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPintroMatLayout = new javax.swing.GroupLayout(jPintroMat);
        jPintroMat.setLayout(jPintroMatLayout);
        jPintroMatLayout.setHorizontalGroup(
            jPintroMatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPintroMatLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPintroMatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPbusca_DNI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPintroMatLayout.setVerticalGroup(
            jPintroMatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPintroMatLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPbusca_DNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Consultar alquiler");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nº alquileres:");

        jLtotalAlq.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLtotalAlq.setForeground(new java.awt.Color(255, 255, 255));
        jLtotalAlq.setText("-");

        jPbotonera.setBackground(new java.awt.Color(51, 134, 209));

        jBcancel.setBackground(new java.awt.Color(255, 0, 0));
        jBcancel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jBcancel.setForeground(new java.awt.Color(255, 255, 255));
        jBcancel.setText("X");
        jBcancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcancelActionPerformed(evt);
            }
        });

        jBfirst.setBackground(new java.awt.Color(51, 134, 209));
        jBfirst.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        jBfirst.setForeground(new java.awt.Color(255, 255, 255));
        jBfirst.setText("l◄");
        jBfirst.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBfirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBfirstActionPerformed(evt);
            }
        });

        jBanterior.setBackground(new java.awt.Color(51, 134, 209));
        jBanterior.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        jBanterior.setForeground(new java.awt.Color(255, 255, 255));
        jBanterior.setText("◄");
        jBanterior.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBanterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBanteriorActionPerformed(evt);
            }
        });

        jBnext.setBackground(new java.awt.Color(51, 134, 209));
        jBnext.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        jBnext.setForeground(new java.awt.Color(255, 255, 255));
        jBnext.setText("►");
        jBnext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBnextActionPerformed(evt);
            }
        });

        jBlast.setBackground(new java.awt.Color(51, 134, 209));
        jBlast.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        jBlast.setForeground(new java.awt.Color(255, 255, 255));
        jBlast.setText("►l");
        jBlast.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBlast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBlastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPbotoneraLayout = new javax.swing.GroupLayout(jPbotonera);
        jPbotonera.setLayout(jPbotoneraLayout);
        jPbotoneraLayout.setHorizontalGroup(
            jPbotoneraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPbotoneraLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jBfirst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBanterior)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBnext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBlast)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBcancel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        jPbotoneraLayout.setVerticalGroup(
            jPbotoneraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPbotoneraLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPbotoneraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPbotoneraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBanterior, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBnext, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBfirst, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBlast, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBcancel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jLalq_actual.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLalq_actual.setForeground(new java.awt.Color(255, 255, 255));
        jLalq_actual.setText("-");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nº de alquiler:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPintroMat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLtotalAlq, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(24, 24, 24)
                        .addComponent(jLalq_actual, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPbotonera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPdatosAlq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLtotalAlq))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLalq_actual))))
                .addGap(7, 7, 7)
                .addComponent(jPintroMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPdatosAlq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPbotonera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 771, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 882, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcancelActionPerformed
        dispose();
         try {//si un dni tiene más d un coche alquilado, la conexión estaba abierta
            con.cerrarConexion();
            conBusqueda.cerrarConexion();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error!!", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error!!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBcancelActionPerformed

    private void jBcheckMat_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcheckMat_ActionPerformed
        //para validar matrícula
        boolean matOk = true, alquilado = true, existeMat;
        String matricula = jFTmat.getText().toUpperCase();
        //limpiar datos posible consulta anterior
        jTextArea_datosAlq_.setText("");
        //limpia campo dno
        jFTdni.setText("");
        //comprobar q existe el vehículo y no está alquilado
        if (jFTmat.getValue() == null) {
            jLerrorMatri.setText("Introduzca la matrícula. Formato admitido: 4 números + 3 letras");
            jFTmat.setText("");
            jFTmat.requestFocus();
            matOk = false;
        } else {
            try {
                matOk = MiLibreria.controlMatricula(matricula);
                jLerrorMatri.setText("");
                if (matOk) {
                    //si pasa el control, vemos si ya existe y si está alquilado
                    try {
                        existeMat = LibreriaUsoBBDD.existeMatricula(matricula);
                        if (!existeMat) {
                            jLerrorMatri.setText("Este vehículo NO existe");
                            jFTmat.setText("");
                            jFTmat.requestFocus();
                            matOk = false;
                            /*COmprobar si está alquilado*/
                        } else if (!LibreriaUsoBBDD.existeAlquiler(matricula)) {
                            //no se puede borrar
                            JOptionPane.showMessageDialog(this, "El vehículo NO está alquilado.\n", "Vehículo NO Alquilado", JOptionPane.ERROR_MESSAGE);
                            jFTmat.setText("");
                            alquilado = false;
                        }else{
                            //mostrar datos del alquiler
                            con.conecta();
                            con.crearSentencia();
                            alq = con.buscaAlq(matricula);
                            actualizaBotones();//para deshabilitar
                            
                            jTextArea_datosAlq_.setText(alq.verInfo());
                            con.cerrarConexion();
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Error ver matricula!!", JOptionPane.ERROR_MESSAGE);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Error mat!!", JOptionPane.ERROR_MESSAGE);
                    }

                }
            } catch (ExcepcionPropia e) {
                jLerrorMatri.setText(e.getMessage());
                matOk = false;
                jFTmat.setText("");
                jFTmat.requestFocus();
            } catch (Exception e) {
                matOk = false;
                jLerrorMatri.setText("Fallo al validar la matrícula");
            }
            if (matOk && alquilado) {
                jPdatosAlq.setVisible(true);
                jPbotonera.setVisible(true);
            }

        }//fin valida mat



    }//GEN-LAST:event_jBcheckMat_ActionPerformed

    private void jBcheckDni_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcheckDni_ActionPerformed
        boolean dniOk = true, alquilado = true,existeDni;
        String dni = jFTdni.getText().toUpperCase();
        int tamanyo=-1;
        //El recuadro para introducir datos solo deja el patron de 4num + 3 letras
        //limpiar datos posible consulta anterior
        jTextArea_datosAlq_.setText("");
        //limpia campo matricula
        jFTmat.setText("");
        //comprobar DNI
        if (jFTdni.getValue() == null) {
            jLerrorDni.setText("Introduzca el DNI.");
            jFTdni.setText("");
            jFTdni.requestFocus();
            dniOk = false;
        } else {
            try {
                dniOk = MiLibreria.controlarDNI(dni);
                jLerrorDni.setText("");
                if (dniOk) {
                    //si pasa el control, vemos si ya existe
                     try {
                        existeDni = LibreriaUsoBBDD.existeDni(dni);
                        if (!existeDni) {
                            jLerrorDni.setText("Este conductor NO está registrado");
                            dniOk = false;
                            jFTdni.setText("");
                        } else if (!LibreriaUsoBBDD.existeAlquilerDni(dni)) {
                            //no se puede borrar
                            JOptionPane.showMessageDialog(this, "El cliente NO tiene nada alquilado.\n", "Sin alquileres", JOptionPane.ERROR_MESSAGE);
                            alquilado = false;
                            jFTdni.setText("");
                        }else{
                            //mostrar datos del alquiler
                            con.conecta();
                            con.crearSentencia();
                            con.ejecutaSQL("SELECT * FROM `alquiler` WHERE codCli = '" + dni +"'");
                            
                            con.irAlPrimero();
                            //muestra la info del primero
                            
                            //puede haber más de un resultado
                            tamanyo = con.tamanyo();
                            actualizaBotones();
                            if(tamanyo>1){
                                //se activa botonera navegación
                                //actualizaBotones();
                                //obtenemos los alquileres a traves de otra conexion
                                 matAct = con.dameMatAct();
                                conBusqueda.conecta();
                                conBusqueda.crearSentencia();
                                alq = conBusqueda.buscaAlq(matAct);
                                mostrarAlquiler(alq);
                                
                             } else {
                                //se cierra conexión pq solo hay un resultado
                                alq = con.buscaAlqDni(dni);
                                jTextArea_datosAlq_.setText(alq.verInfo());
                                con.cerrarConexion();
                             }
                         }

                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Error BBDD. Al buscar DNI!!", JOptionPane.ERROR_MESSAGE);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Error descon!!", JOptionPane.ERROR_MESSAGE);
                   }
                }
            } catch (ExcepcionPropia e) {
                jLerrorDni.setText(e.getMessage());
                dniOk = false;
                jFTdni.setText("");
                jFTdni.requestFocus();
            } catch (Exception e) {
                dniOk = false;
                jLerrorDni.setText("Fallo al validar el DNI");
            }
        }
        
    }//GEN-LAST:event_jBcheckDni_ActionPerformed

    private void jBfirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBfirstActionPerformed
        // primer alq
        try {
            if (!con.isPrincipio()) {//si no es el último
                con.irAlPrimero();
                matAct = con.dameMatAct();
                alq = conBusqueda.buscaAlq(matAct);
                mostrarAlquiler(alq);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error de navegación", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBfirstActionPerformed

    private void jBanteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBanteriorActionPerformed
        try {
            if (!con.isPrincipio()) {//si no es el último
                con.irAlAnterior();
                matAct = con.dameMatAct();
                alq = conBusqueda.buscaAlq(matAct);
                mostrarAlquiler(alq);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error de navegación", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBanteriorActionPerformed

    private void jBnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBnextActionPerformed
        try {
            if (!con.isFinal()) {//si no es el último
                con.irAlSiguiente();
                matAct = con.dameMatAct();
                alq = conBusqueda.buscaAlq(matAct);
                mostrarAlquiler(alq);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error de navegación", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBnextActionPerformed

    private void jBlastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBlastActionPerformed
        try {
            if (!con.isFinal()) {//si no es el último
                con.irAlFinal();
                matAct = con.dameMatAct();
                alq = conBusqueda.buscaAlq(matAct);
                mostrarAlquiler(alq);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error de navegación", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBlastActionPerformed

     public void mostrarAlquiler(Alquiler alq){
        jTextArea_datosAlq_.setText(alq.verInfo());
        try{
            jLalq_actual.setText(Integer.toString(con.damePosAct()));
            actualizaBotones();
        }
         catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al consultar nº alquiler!!", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
               
    }
    
    private void actualizaBotones() throws SQLException {
        //se deshabilitan todos
        jBanterior.setEnabled(false);
        jBnext.setEnabled(false);
        jBfirst.setEnabled(false);
        jBlast.setEnabled(false);

        //se habilitan según la posicion
        //si hay más de un vehículo
        if (con.tamanyo() > 1) {
            if (!con.isFinal()) {//si no es el ultimo
                jBnext.setEnabled(true);
                jBlast.setEnabled(true);
            }
            if (!con.isPrincipio()) {
                jBfirst.setEnabled(true);
                jBanterior.setEnabled(true);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBanterior;
    private javax.swing.JButton jBcancel;
    private javax.swing.JButton jBcheckDni_;
    private javax.swing.JButton jBcheckMat_;
    private javax.swing.JButton jBfirst;
    private javax.swing.JButton jBlast;
    private javax.swing.JButton jBnext;
    private javax.swing.JFormattedTextField jFTdni;
    private javax.swing.JFormattedTextField jFTmat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLalq_actual;
    private javax.swing.JLabel jLerrorDni;
    private javax.swing.JLabel jLerrorMatri;
    private javax.swing.JLabel jLtotalAlq;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPbotonera;
    private javax.swing.JPanel jPbusca_DNI;
    private javax.swing.JPanel jPdatosAlq;
    private javax.swing.JPanel jPintroMat;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea_datosAlq_;
    // End of variables declaration//GEN-END:variables
}
